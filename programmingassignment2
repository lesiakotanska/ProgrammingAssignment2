## This function is like the one given in the example. It caches a matrix and has four methods, set, get, setmean and getmean. 
## The last two will be used by the cacheSolve function.

makeCacheMatrix<- function(x = as.matrix) { 
inv <- NULL 
set <- function(y) { 
  x <<- y 
  inv <<- NULL 
} 

get <- function() x 
setinverse <- function(inverse) 
inv <- inverse 
getinverse <- function() inv 
list(set = set, get = get, 
    setinverse = setinverse, 
    getinverse = getinverse) 
}

## We use the solve function to get the inverse of the given matrix.

cacheSolve <- function(x, ...) { 
inv<-x$getinverse() 
if(!is.null(inv)) { 
    message("getting cached data") 
    return(inv) 
} 
data<- x$get() 
inv<- solve(data,...) x
$setinverse(inv) inv 
}
